// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders CurrentLocation component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alerts />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <TouchableOpacity
          activeOpacity={0.2}
          id="brokenLift"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Broken Lift
          </Component>
        </TouchableOpacity>,
        <TouchableOpacity
          activeOpacity={0.2}
          id="blockedPath"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Blocked Path
          </Component>
        </TouchableOpacity>,
        <TouchableOpacity
          activeOpacity={0.2}
          id="stairs"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Stairs
          </Component>
        </TouchableOpacity>,
        <TouchableOpacity
          activeOpacity={0.2}
          id="narrowPath"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Narrow Path
          </Component>
        </TouchableOpacity>,
        <TouchableOpacity
          activeOpacity={0.2}
          id="noRamp"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            No Ramp
          </Component>
        </TouchableOpacity>,
        <TouchableOpacity
          activeOpacity={0.2}
          id="show-form"
          onPress={[Function]}
          style={
            Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            }
          }
        >
          <Component
            source={1}
          />
          <Component
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Other
          </Component>
        </TouchableOpacity>,
        <Component
          animationType="slide"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          transparent={false}
          visible={false}
        >
          <Component
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Enter Your Report"
              underlineColorAndroid="transparent"
            />
            <Button
              onPress={[Function]}
              title="Submit"
            />
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              underlayColor="black"
            >
              <Component
                style={
                  Object {
                    "fontSize": 30,
                  }
                }
              >
                Close Report
              </Component>
            </TouchableHighlight>
          </Component>
        </Component>,
      ],
      "style": Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Broken Lift
            </Component>,
          ],
          "id": "brokenLift",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Broken Lift",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Broken Lift",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Blocked Path
            </Component>,
          ],
          "id": "blockedPath",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Blocked Path",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Blocked Path",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Stairs
            </Component>,
          ],
          "id": "stairs",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Stairs",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Stairs",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Narrow Path
            </Component>,
          ],
          "id": "narrowPath",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Narrow Path",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Narrow Path",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              No Ramp
            </Component>,
          ],
          "id": "noRamp",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "No Ramp",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "No Ramp",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Component
              source={1}
            />,
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Other
            </Component>,
          ],
          "id": "show-form",
          "onPress": [Function],
          "style": Object {
            "height": 80,
            "margin": 30,
            "width": 70,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Other",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Other",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animationType": "slide",
          "children": <Component
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Enter Your Report"
              underlineColorAndroid="transparent"
            />
            <Button
              onPress={[Function]}
              title="Submit"
            />
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              underlayColor="black"
            >
              <Component
                style={
                  Object {
                    "fontSize": 30,
                  }
                }
              >
                Close Report
              </Component>
            </TouchableHighlight>
          </Component>,
          "hardwareAccelerated": false,
          "onRequestClose": [Function],
          "transparent": false,
          "visible": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Enter Your Report"
                underlineColorAndroid="transparent"
              />,
              <Button
                onPress={[Function]}
                title="Submit"
              />,
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                underlayColor="black"
              >
                <Component
                  style={
                    Object {
                      "fontSize": 30,
                    }
                  }
                >
                  Close Report
                </Component>
              </TouchableHighlight>,
            ],
            "style": Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": true,
                "onChangeText": [Function],
                "placeholder": "Enter Your Report",
                "underlineColorAndroid": "transparent",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onPress": [Function],
                "title": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.85,
                "children": <Component
                  style={
                    Object {
                      "fontSize": 30,
                    }
                  }
                >
                  Close Report
                </Component>,
                "delayPressOut": 100,
                "onPress": [Function],
                "underlayColor": "black",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Close Report",
                  "style": Object {
                    "fontSize": 30,
                  },
                },
                "ref": null,
                "rendered": "Close Report",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <TouchableOpacity
            activeOpacity={0.2}
            id="brokenLift"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Broken Lift
            </Component>
          </TouchableOpacity>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="blockedPath"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Blocked Path
            </Component>
          </TouchableOpacity>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="stairs"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Stairs
            </Component>
          </TouchableOpacity>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="narrowPath"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Narrow Path
            </Component>
          </TouchableOpacity>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="noRamp"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              No Ramp
            </Component>
          </TouchableOpacity>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="show-form"
            onPress={[Function]}
            style={
              Object {
                "height": 80,
                "margin": 30,
                "width": 70,
              }
            }
          >
            <Component
              source={1}
            />
            <Component
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Other
            </Component>
          </TouchableOpacity>,
          <Component
            animationType="slide"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={false}
            visible={false}
          >
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Enter Your Report"
                underlineColorAndroid="transparent"
              />
              <Button
                onPress={[Function]}
                title="Submit"
              />
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                underlayColor="black"
              >
                <Component
                  style={
                    Object {
                      "fontSize": 30,
                    }
                  }
                >
                  Close Report
                </Component>
              </TouchableHighlight>
            </Component>
          </Component>,
        ],
        "style": Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Broken Lift
              </Component>,
            ],
            "id": "brokenLift",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Broken Lift",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Broken Lift",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Blocked Path
              </Component>,
            ],
            "id": "blockedPath",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Blocked Path",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Blocked Path",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Stairs
              </Component>,
            ],
            "id": "stairs",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Stairs",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Stairs",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Narrow Path
              </Component>,
            ],
            "id": "narrowPath",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Narrow Path",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Narrow Path",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                No Ramp
              </Component>,
            ],
            "id": "noRamp",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "No Ramp",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "No Ramp",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": Array [
              <Component
                source={1}
              />,
              <Component
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Other
              </Component>,
            ],
            "id": "show-form",
            "onPress": [Function],
            "style": Object {
              "height": 80,
              "margin": 30,
              "width": 70,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Other",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Other",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animationType": "slide",
            "children": <Component
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Enter Your Report"
                underlineColorAndroid="transparent"
              />
              <Button
                onPress={[Function]}
                title="Submit"
              />
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                underlayColor="black"
              >
                <Component
                  style={
                    Object {
                      "fontSize": 30,
                    }
                  }
                >
                  Close Report
                </Component>
              </TouchableHighlight>
            </Component>,
            "hardwareAccelerated": false,
            "onRequestClose": [Function],
            "transparent": false,
            "visible": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  placeholder="Enter Your Report"
                  underlineColorAndroid="transparent"
                />,
                <Button
                  onPress={[Function]}
                  title="Submit"
                />,
                <TouchableHighlight
                  activeOpacity={0.85}
                  delayPressOut={100}
                  onPress={[Function]}
                  underlayColor="black"
                >
                  <Component
                    style={
                      Object {
                        "fontSize": 30,
                      }
                    }
                  >
                    Close Report
                  </Component>
                </TouchableHighlight>,
              ],
              "style": Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": true,
                  "onChangeText": [Function],
                  "placeholder": "Enter Your Report",
                  "underlineColorAndroid": "transparent",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onPress": [Function],
                  "title": "Submit",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.85,
                  "children": <Component
                    style={
                      Object {
                        "fontSize": 30,
                      }
                    }
                  >
                    Close Report
                  </Component>,
                  "delayPressOut": 100,
                  "onPress": [Function],
                  "underlayColor": "black",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Close Report",
                    "style": Object {
                      "fontSize": 30,
                    },
                  },
                  "ref": null,
                  "rendered": "Close Report",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
