// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders DynamicLocation component 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <MapView
    provider="google"
    showsUserLocation={true}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <Callout
    style={
      Object {
        "bottom": 10,
        "position": "absolute",
        "right": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  </Callout>
</View>
`;

exports[`Should test for setState changes to journeyTime and journeyDistance 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DynamicLocation />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MockMapView
          provider="google"
          showsUserLocation={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <MapViewDirections
            apikey="AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU"
            mode="walking"
            onReady={[Function]}
            strokeColor="hotpink"
            strokeWidth={3}
          />
        </MockMapView>,
        null,
        <Unknown
          style={
            Object {
              "bottom": 10,
              "position": "absolute",
              "right": 10,
            }
          }
        >
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
          >
            <Component
              source={1}
            />
          </TouchableOpacity>
        </Unknown>,
      ],
      "style": Object {
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            null,
            null,
            <MapViewDirections
              apikey="AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU"
              mode="walking"
              onReady={[Function]}
              strokeColor="hotpink"
              strokeWidth={3}
            />,
            null,
            null,
          ],
          "provider": "google",
          "region": undefined,
          "showsUserLocation": true,
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          null,
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "apikey": "AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU",
              "destination": undefined,
              "mode": "walking",
              "onReady": [Function],
              "origin": undefined,
              "strokeColor": "hotpink",
              "strokeWidth": 3,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          null,
          null,
        ],
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
          >
            <Component
              source={1}
            />
          </TouchableOpacity>,
          "style": Object {
            "bottom": 10,
            "position": "absolute",
            "right": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Component
              source={1}
            />,
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MockMapView
            provider="google"
            showsUserLocation={true}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <MapViewDirections
              apikey="AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU"
              mode="walking"
              onReady={[Function]}
              strokeColor="hotpink"
              strokeWidth={3}
            />
          </MockMapView>,
          null,
          <Unknown
            style={
              Object {
                "bottom": 10,
                "position": "absolute",
                "right": 10,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Component
                source={1}
              />
            </TouchableOpacity>
          </Unknown>,
        ],
        "style": Object {
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              null,
              <MapViewDirections
                apikey="AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU"
                mode="walking"
                onReady={[Function]}
                strokeColor="hotpink"
                strokeWidth={3}
              />,
              null,
              null,
            ],
            "provider": "google",
            "region": undefined,
            "showsUserLocation": true,
            "style": Object {
              "flex": 1,
            },
          },
          "ref": null,
          "rendered": Array [
            null,
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "apikey": "AIzaSyAl_S-rNNLR8Df8XW0wfKVh11sSHbhVnQU",
                "destination": undefined,
                "mode": "walking",
                "onReady": [Function],
                "origin": undefined,
                "strokeColor": "hotpink",
                "strokeWidth": 3,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            null,
            null,
          ],
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Component
                source={1}
              />
            </TouchableOpacity>,
            "style": Object {
              "bottom": 10,
              "position": "absolute",
              "right": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Component
                source={1}
              />,
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Should test for setState changes to locationChanged: Something Updated 1`] = `
Object {
  "alertIsLoading": true,
  "alertMarkers": Array [],
  "alertVisibility": true,
  "isLoading": true,
  "journeyDistance": null,
  "journeyTime": null,
  "location": Object {
    "coords": Object {
      "latitude": -0.09,
      "longitude": 51,
    },
  },
  "markers": Array [],
  "region": Object {
    "latitude": -0.09,
    "latitudeDelta": 0.1,
    "longitude": 51,
    "longitudeDelta": 0.05,
  },
}
`;

exports[`Should test for setState changes to locationChanged: something 1`] = `
Object {
  "alertIsLoading": true,
  "alertMarkers": Array [],
  "alertVisibility": true,
  "isLoading": true,
  "journeyDistance": null,
  "journeyTime": null,
  "location": Object {
    "coords": Object {
      "latitude": -0.09,
      "longitude": 51,
    },
  },
  "markers": Array [],
}
`;
